events {
}

http {
    upstream upstream_norsk {
        server host.docker.internal:8080;
        keepalive 64;
    }

    upstream upstream_vis {
        server host.docker.internal:6791;
        keepalive 64;
    }

    upstream upstream_studio {
        server host.docker.internal:8000;
        keepalive 64;
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        ssl_certificate         /run/secrets/nginx.ec.crt;
        ssl_certificate_key     /run/secrets/nginx.ec.key;
        include                 /etc/nginx/mime.types;

        # Studio
        location ~ ^/studio/live/(.*) {
        proxy_pass http://upstream_studio/live/$1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Rewrite-URL $request_uri;
        }
        location ~ ^/studio/(.*) {
        proxy_pass http://upstream_studio/$1;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        }
        location ~ ^/?$ {
            return 301 /studio/;
        }

        # Norsk
        location ~ ^/norsk/(.*) {

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            #
            # Custom headers and headers various browsers *should* be OK with but aren't
            #
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            #
            # Tell client that this pre-flight info is valid for 20 days
            #
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        proxy_pass http://upstream_norsk/$1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        }

        # Visualiser
        location ~ ^/((:?.*/)?(:?ws|status))$ {
        proxy_pass http://upstream_vis/$1;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_read_timeout 86400;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        }
        location ~ ^/visualiser?$ {
            return 301 /visualiser/;
        }
        location ~ ^/(.*) {
        proxy_pass http://upstream_vis/$1;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        }
    }
    server {
        return 301 https://$host$request_uri;
        listen 80 ;
        listen [::]:80 ;
    }
}
